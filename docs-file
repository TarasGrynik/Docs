
const inputs = document.querySelectorAll('.choose__form-label input');

// фукція для проходження по усім елементам нод ліста і з ними щось зробити es6
[...nodeList].forEach($coin => $coin.addEventListener('focus', handleInputStart));


// аналогічний але кросбраузерний варіант з чистим js
 [].forEach.call(nodeList, function(el) {
     el.addEventListener('focus', handleInputStart);
 });

// function for paste path for img in php files
<?= SITE_TEMPLATE_PATH ?>  


// js and css for styling custom option tag
  // must be this html structure
  <div class="job-form__select-block custom-select">
    <select name="currency" id="currency" required>
      <option value="" selected disabled>Грн</option>
      <option value="">Посада1</option>
      <option value="">Посада2</option>
    </select>
  </div>
 // must be this css
  /*the container must be positioned relative:*/
  .custom-select {
    position: relative;
    font-family: $primary-font-stack;
    width: 100%;
    padding: 0;
    height: auto;
    border: none;

  }

  .custom-select select {
    display: none;

    /*hide original SELECT element:*/
  }

  .select-selected {
    background-color: $bg-style-color;
    width: 100%;
    border: none !important;
    height: 80px;
    display: flex;
    align-items: center;
    color: $decorative-text-color !important;
    font-size: 14px !important;
    font-family: $primary-font-stack;
    font-weight: 700;
  }

  /*style the arrow inside the select element:*/
  .select-selected:after {
    position: absolute;
    content: "";
    top: 48%;
    right: 40px;
    width: 0;
    height: 0;
    border: 5px solid transparent;
    border-color: #252525 transparent transparent transparent;

    @media screen and (max-width: 1200px) {
      right: 15px;
    }
  }

  /*point the arrow upwards when the select box is open (active):*/
  .select-selected.select-arrow-active:after {
    border-color: transparent transparent #252525 transparent;
    top: 40%;
  }

  /*style the items (options), including the selected item:*/
  .select-items div,
  .select-selected {
    color: $decorative-text-color;
    transition: .2s ease-in-out;
    padding: 23px 16px;
    border: 1px solid transparent;
    border-color: transparent transparent $default-bg-color transparent;
    cursor: pointer;
    user-select: none;

    &:hover {
      color: $primary-text-color;
    }

    &:last-child {
      border-color: transparent transparent transparent transparent;
    }
  }

  /*style items (options):*/
  .select-items {
    position: absolute;
    background-color: $bg-style-color;
    top: 101%;
    left: 0;
    right: 0;
    z-index: 99;
    padding: 0 10px;
    font-size: $primary-font-size;
    box-shadow: 3px 11px 103px rgba(0, 0, 0, 0.07);
  }

  /*hide the items when the select box is closed:*/
  .select-hide {
    display: none;
  }

  .select-items div:hover,
  .same-as-selected {
    color: $primary-text-color;
  }
  
  // must be this js
  var x, i, j, selElmnt, a, b, c;
/*look for any elements with the class "custom-select":*/
x = document.getElementsByClassName("custom-select");
for (i = 0; i < x.length; i++) {
  selElmnt = x[i].getElementsByTagName("select")[0];
  /*for each element, create a new DIV that will act as the selected item:*/
  a = document.createElement("DIV");
  a.setAttribute("class", "select-selected");
  a.innerHTML = selElmnt.options[selElmnt.selectedIndex].innerHTML;
  x[i].appendChild(a);
  /*for each element, create a new DIV that will contain the option list:*/
  b = document.createElement("DIV");
  b.setAttribute("class", "select-items select-hide");
  for (j = 1; j < selElmnt.length; j++) {
    /*for each option in the original select element,
    create a new DIV that will act as an option item:*/
    c = document.createElement("DIV");
    c.innerHTML = selElmnt.options[j].innerHTML;
    c.addEventListener("click", function(e) {
      /*when an item is clicked, update the original select box,
      and the selected item:*/
      var y, i, k, s, h;
      s = this.parentNode.parentNode.getElementsByTagName("select")[0];
      h = this.parentNode.previousSibling;
      for (i = 0; i < s.length; i++) {
        if (s.options[i].innerHTML == this.innerHTML) {
          s.selectedIndex = i;
          h.innerHTML = this.innerHTML;
          y = this.parentNode.getElementsByClassName("same-as-selected");
          for (k = 0; k < y.length; k++) {
            y[k].removeAttribute("class");
          }
          this.setAttribute("class", "same-as-selected");
          break;
        }
      }
      h.click();
    });
    b.appendChild(c);
  }
  x[i].appendChild(b);
  a.addEventListener("click", function(e) {
    /*when the select box is clicked, close any other select boxes,
    and open/close the current select box:*/
    e.stopPropagation();
    closeAllSelect(this);
    this.nextSibling.classList.toggle("select-hide");
    this.classList.toggle("select-arrow-active");
  });
}
function closeAllSelect(elmnt) {
  /*a function that will close all select boxes in the document,
  except the current select box:*/
  var x, y, i, arrNo = [];
  x = document.getElementsByClassName("select-items");
  y = document.getElementsByClassName("select-selected");
  for (i = 0; i < y.length; i++) {
    if (elmnt == y[i]) {
      arrNo.push(i)
    } else {
      y[i].classList.remove("select-arrow-active");
    }
  }
  for (i = 0; i < x.length; i++) {
    if (arrNo.indexOf(i)) {
      x[i].classList.add("select-hide");
    }
  }
}
/*if the user clicks anywhere outside the select box,
then close all select boxes:*/
document.addEventListener("click", closeAllSelect);


// summernote textarea editor
$(document).ready(function () {
  var textAreaFocus = $(".job-form__teaxarea-block textarea");

  $(textAreaFocus).focus(function () {
    $(this).summernote({
      height: 240,                 // set editor height
      minHeight: null,             // set minimum height of editor
      maxHeight: null,             // set maximum height of editor
      focus: true               // set focus to editable area after
    });
  });
});


// function for set and save cookie with jquery
//!!!!!! must be jquery cookie !!!!!!!!!
// Download and include this: https://github.com/carhartl/jquery-cookie
$(document).ready(function() {
  var cookieshowhide = $.cookie('SOME-COOKIE');
  if(cookieshowhide == 1) {
     $(".cookiealert").hide();                     // елемент який ми видаляємо
	}
  
  $('.closecookiewarning').click(function(){       // кнопка по якій ми клікаємо
  	$.cookie("SOME-COOKIE", 1, { expires : 1000 });
   	$(".cookiealert").hide();                      // елемент який ми видаляємо
  })
})



// вирішення проблеми несумісності summernote (textarea iditor) і jQuery validation
var v = $('#myForm').validate({
  // Ignore all hidden elements except your `textarea` element. Also, you have to
  // ignore the div that `Summernote` uses to hold your entered data (which is also a
  // content editable div with no name) because this plugin will try to check it on blur.
  // and because it has no name, the error shown in your capture will pop up (the
  // `escapeCssMeta` method escapes the name/id of an element, and in this case
  // an undefined value was passed to it, hence the error message).
  //
  // The div has the following class `.note-editable .panel-body` that we can use to
  // exclude it from validation
  ignore: ":hidden:not(#summernote),.note-editable.panel-body"
});

var myElement = $('#summernote');

myElement.summernote({
  // See: http://summernote.org/deep-dive/
  callbacks: {
    // Register the `onChnage` callback in order to listen to the changes of the
    // Summernote editor. You can also use the event `summernote.change` to handle
    // the change event as follow:
    //   myElement.summernote()
    //     .on("summernote.change", function(event, contents, $editable) {
    //       // ...
    //     });
    onChange: function(contents, $editable) {
      // Note that at this point, the value of the `textarea` is not the same as the one
      // you entered into the summernote editor, so you have to set it yourself to make
      // the validation consistent and in sync with the value.
      myElement.val(myElement.summernote('isEmpty') ? "" : contents);

      // You should re-validate your element after change, because the plugin will have
      // no way to know that the value of your `textarea` has been changed if the change
      // was done programmatically.
      v.element(myElement);
    }
  }
});





// регулярка для відображення коректної дати типу дд/mm/yyyy, dd-mm-yyyy, 
^(?:(?:31(\/|-|\.)(?:0?[13578]|1[02]))\1|(?:(?:29|30)(\/|-|\.)(?:0?[1,3-9]|1[0-2])\2))(?:(?:1[6-9]|[2-9]\d)?\d{2})$|^(?:29(\/|-|\.)0?2\3(?:(?:(?:1[6-9]|[2-9]\d)?(?:0[48]|[2468][048]|[13579][26])|(?:(?:16|[2468][048]|[3579][26])00))))$|^(?:0?[1-9]|1\d|2[0-8])(\/|-|\.)(?:(?:0?[1-9])|(?:1[0-2]))\4(?:(?:1[6-9]|[2-9]\d)?\d{2})$

// логіка для показування та скривання списків (блоків)
//this will execute on page load(to be more specific when document ready event occurs)
if ($('li').length > 3) {
  $('.li:gt(2)').hide();
  $('.show-more').show();
}

$('.show-more').on('click', function() {
  //toggle elements with class .ty-compact-list that their index is bigger than 2
  $('li:gt(2)').toggle();
  //change text of show more element just for demonstration purposes to this demo
  $(this).text() === 'Show more' ? $(this).text('Show less') : $(this).text('Show more');
});


// проблема вирішення select2 та jquery validation (коли вибираєш в тезі селект не пропажає обовязкове поле, а цей код відслідковує зміну тегу селект )
  if (formCreateResume) {
    $(document).on("change", ".select2-hidden-accessible", function (e) {
      if (!$.isEmptyObject(formCreateResume.submitted)) {
        formCreateResume.form();
      }
    });
  }

// очищати поле інтуп при фокусі і при втраті фокуса коли поле пусте вертати плейсхолдер
<input type="text"class="u-input-style" id="search" name="search" placeholder="Поиск" onfo cus="this.placeholder = ''" onb lur="this.placeholder = 'Поиск'">


// погано відображаються картинки на mac та на айфонах
img{
width: 100%;
height: 100%;
min-width: 0;
}


// інфо як прижати блок чи футер донизу сторінки
http://dimox.name/press_footer_bottom_with_css/
* {
	margin: 0;
	padding: 0;
}
html,
body {
	height: 100%;
}
.wrapper {
	display: flex;
	flex-direction: column;
	min-height: 100%;
}
.content {
	flex: 1 0 auto;
}
.footer {
	flex: 0 0 auto;
}


// функція акардіон для випадалок
if($(this).closest(для батька).hasClass("active")) {
    $(this).closest(для батька).find(сабліст).slideUp();
    $(this).closest(для батька).removeClass("active");
  } else {
    $(для батька).removeClass("active");
    $(для батька).find(сабліст).slideUp();
    $(this).closest(для батька).addClass("active");
    $(this).closest(для батька).find(сабліст).slideDown();
  }

